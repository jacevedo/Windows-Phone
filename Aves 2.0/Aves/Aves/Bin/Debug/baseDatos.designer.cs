#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aves
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class baseDatosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAvesBD(AvesBD instance);
    partial void UpdateAvesBD(AvesBD instance);
    partial void DeleteAvesBD(AvesBD instance);
    partial void InsertHabitatDB(HabitatDB instance);
    partial void UpdateHabitatDB(HabitatDB instance);
    partial void DeleteHabitatDB(HabitatDB instance);
    partial void InsertPorqueDB(PorqueDB instance);
    partial void UpdatePorqueDB(PorqueDB instance);
    partial void DeletePorqueDB(PorqueDB instance);
    #endregion
		
		public baseDatosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
        //public baseDatosDataContext(System.Data.IDbConnection connection) : 
        //        base(connection, mappingSource)
        //{
        //    OnCreated();
        //}
		
		public baseDatosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
        //public baseDatosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
        //        base(connection, mappingSource)
        //{
        //    OnCreated();
        //}
		
		public System.Data.Linq.Table<AvesBD> AvesBD
		{
			get
			{
				return this.GetTable<AvesBD>();
			}
		}
		
		public System.Data.Linq.Table<HabitatDB> HabitatDB
		{
			get
			{
				return this.GetTable<HabitatDB>();
			}
		}
		
		public System.Data.Linq.Table<PorqueDB> PorqueDB
		{
			get
			{
				return this.GetTable<PorqueDB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class AvesBD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idHabitat;
		
		private string _Ficha;
		
		private string _urlSonido;
		
		private string _Datos;
		
		private string _nomAve;
		
		private EntityRef<HabitatDB> _HabitatDB;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidHabitatChanging(int value);
    partial void OnidHabitatChanged();
    partial void OnFichaChanging(string value);
    partial void OnFichaChanged();
    partial void OnurlSonidoChanging(string value);
    partial void OnurlSonidoChanged();
    partial void OnDatosChanging(string value);
    partial void OnDatosChanged();
    partial void OnnomAveChanging(string value);
    partial void OnnomAveChanged();
    #endregion
		
		public AvesBD()
		{
			this._HabitatDB = default(EntityRef<HabitatDB>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHabitat")]
		public int idHabitat
		{
			get
			{
				return this._idHabitat;
			}
			set
			{
				if ((this._idHabitat != value))
				{
					if (this._HabitatDB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHabitatChanging(value);
					this.SendPropertyChanging();
					this._idHabitat = value;
					this.SendPropertyChanged("idHabitat");
					this.OnidHabitatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ficha", CanBeNull=false)]
		public string Ficha
		{
			get
			{
				return this._Ficha;
			}
			set
			{
				if ((this._Ficha != value))
				{
					this.OnFichaChanging(value);
					this.SendPropertyChanging();
					this._Ficha = value;
					this.SendPropertyChanged("Ficha");
					this.OnFichaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlSonido", CanBeNull=false)]
		public string urlSonido
		{
			get
			{
				return this._urlSonido;
			}
			set
			{
				if ((this._urlSonido != value))
				{
					this.OnurlSonidoChanging(value);
					this.SendPropertyChanging();
					this._urlSonido = value;
					this.SendPropertyChanged("urlSonido");
					this.OnurlSonidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datos", CanBeNull=false)]
		public string Datos
		{
			get
			{
				return this._Datos;
			}
			set
			{
				if ((this._Datos != value))
				{
					this.OnDatosChanging(value);
					this.SendPropertyChanging();
					this._Datos = value;
					this.SendPropertyChanged("Datos");
					this.OnDatosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomAve", CanBeNull=false)]
		public string nomAve
		{
			get
			{
				return this._nomAve;
			}
			set
			{
				if ((this._nomAve != value))
				{
					this.OnnomAveChanging(value);
					this.SendPropertyChanging();
					this._nomAve = value;
					this.SendPropertyChanged("nomAve");
					this.OnnomAveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HabitatDB_AvesBD", Storage="_HabitatDB", ThisKey="idHabitat", OtherKey="id", IsForeignKey=true)]
		public HabitatDB HabitatDB
		{
			get
			{
				return this._HabitatDB.Entity;
			}
			set
			{
				HabitatDB previousValue = this._HabitatDB.Entity;
				if (((previousValue != value) 
							|| (this._HabitatDB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HabitatDB.Entity = null;
						previousValue.AvesBD.Remove(this);
					}
					this._HabitatDB.Entity = value;
					if ((value != null))
					{
						value.AvesBD.Add(this);
						this._idHabitat = value.id;
					}
					else
					{
						this._idHabitat = default(int);
					}
					this.SendPropertyChanged("HabitatDB");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class HabitatDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom_Habitat;
		
		private string _descripcion;
		
		private EntitySet<AvesBD> _AvesBD;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnom_HabitatChanging(string value);
    partial void Onnom_HabitatChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public HabitatDB()
		{
			this._AvesBD = new EntitySet<AvesBD>(new Action<AvesBD>(this.attach_AvesBD), new Action<AvesBD>(this.detach_AvesBD));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom_Habitat", CanBeNull=false)]
		public string nom_Habitat
		{
			get
			{
				return this._nom_Habitat;
			}
			set
			{
				if ((this._nom_Habitat != value))
				{
					this.Onnom_HabitatChanging(value);
					this.SendPropertyChanging();
					this._nom_Habitat = value;
					this.SendPropertyChanged("nom_Habitat");
					this.Onnom_HabitatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HabitatDB_AvesBD", Storage="_AvesBD", ThisKey="id", OtherKey="idHabitat")]
		public EntitySet<AvesBD> AvesBD
		{
			get
			{
				return this._AvesBD;
			}
			set
			{
				this._AvesBD.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AvesBD(AvesBD entity)
		{
			this.SendPropertyChanging();
			entity.HabitatDB = this;
		}
		
		private void detach_AvesBD(AvesBD entity)
		{
			this.SendPropertyChanging();
			entity.HabitatDB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PorqueDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _descripcion;
		
		private string _nomPor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnnomPorChanging(string value);
    partial void OnnomPorChanged();
    #endregion
		
		public PorqueDB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomPor", CanBeNull=false)]
		public string nomPor
		{
			get
			{
				return this._nomPor;
			}
			set
			{
				if ((this._nomPor != value))
				{
					this.OnnomPorChanging(value);
					this.SendPropertyChanging();
					this._nomPor = value;
					this.SendPropertyChanged("nomPor");
					this.OnnomPorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
